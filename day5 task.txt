1.a.Print the odd number in an array
Input :['1','2','3','4','5','6','7','8','9','10']
Output:['1','3','5','7','9']
 
A.IIFE 
(function(num){
  let newarr=[];
  for(let i=0;i<arr.length;i++){
    if(arr[i]%2!==0){
      newarr.push(arr[i]);
      }
      }
      console.log(newarr);
})();

B.ANONYMOUS FUNCTION
const odd=function(num){
  let newarr=[];
  for(let i=0;i<num.length;i++){
    if(num[i]%2!==0){
      newarr.push(arr[i]);
      }
      }
      console.log(newarr);
}
odd(arr);

----------------------------------------------------------------------------------------------------------

1.b.Convert all the strings to title caps in a string array

A.IIFE 
INPUT:"don’t judge a book by its cover"

(function(string) {
      var newstr= string.toLowerCase().split(" ");
      for(var i = 0; i< newstr.length; i++){
         newstr[i] = newstr[i][0].toUpperCase() + newstr[i].slice(1);
      }
        console.log(newstr.join(" "));
   
   })
   ("don’t judge a book by its cover");

OUTPUT:Don’t Judge A Book By Its Cover

B.ANONYMOUS FUNCTION

INPUT:"don’t judge a book by its cover"

const caps= function(string){
     var newstr= string.toLowerCase().split(" ");
      for(var i = 0; i< newstr.length; i++){
         newstr[i] = newstr[i][0].toUpperCase() + newstr[i].slice(1);
      }
        console.log(newstr.join(" "));
   }
   caps("don’t judge a book by its cover");

OUTPUT:Don’t Judge A Book By Its Cover

------------------------------------------------------------------------------------------------------------------------
1.c.sum of all numbers in an array

A.IIFE 

INPUT:[2,3,4,5]

(function(num){
  let sum=0;
  for(let i=0;i<num.length;i++)
 {
  sum=sum+num[i];
  }
 
 console.log(sum);
   
})(arr);

OUTPUT:14

B.ANONYMOUS FUNCTION
INPUT:[2,3,4,5]

 let add=function(num){
     let sum=0;
  for(let i=0;i<num.length;i++)
 {
  sum=sum+num[i];
  }
 
 console.log(sum);
  }
  add(arr);
  
OUTPUT:14
--------------------------------------------------------------------------------------------------------------------
1.d.Return all the PRIME number in an array

A.IIFE 
INPUT:arr=[1,2,3,4,5,6,7];

const b=(function(num){
  let newarr=[];
  num.forEach((value)=>{
     let fac=0;  
  for(let i=0;i<=value;i++){   
    if(value%i===0){
      fac++;}      
}
if(fac===2)
  {
  newarr.push(value);
  }
})
return newarr; 
 })(arr);
 console.log(b);

OUTPUT:[2,3,5,7]

B.ANONYMOUS FUNCTION

INPUT:arr=[1,2,3,4,5,6,7];

 const prime=function(num){
  let newarr=[];
  num.forEach((value)=>{
     let fac=0;  
  for(let i=0;i<=value;i++){   
    if(value%i===0){
      fac++;}      
}
if(fac===2)
  {
  newarr.push(value);
  }
})
return newarr; 
 }
let d=prime(arr);
console.log(d);

OUTPUT:[2,3,5,7]
----------------------------------------------------------------------------------------------------------------
1.e.Return all palindrome in an array

INPUT :arr=["madam","hello","huh","clock","deed"]

A.IIFE 

const f=(function(one){
    let newarr=[];
    one.forEach((element)=>{
        
        let a=element.split("");
        let d=a.reverse().join("");
       if(element===d){
       newarr.push(element)
       }
       })
return newarr;
        })(arr);
        console.log(f);

OUTPUT:[ 'madam', 'huh', 'deed' ]

B.ANONYMOUS FUNCTION

const f=function(one){
    let newarr=[];
    one.forEach((element)=>{
        
        let a=element.split("");
        let d=a.reverse().join("");
       if(element===d){
       newarr.push(element)
       }
       })
return newarr;
        }
        console.log(f(arr));

OUTPUT:[ 'madam', 'huh', 'deed' ]
--------------------------------------------------------------------------------------------------------------
1.f. Return median of two sorted array of the same size


A.IIFE 

INPUT q=[1,2,3]; p=[2,3,4];

let w=(function(a,b){
let c=a.concat(b);
let d=c.sort((a,b)=>a-b);

let n=d.length/2;
let f=(d[n]+d[n-1])/2
return f;
})(q,p);
console.log(w);

OUTPUT:2.5
 

B.ANONYMOUS FUNCTION

INPUT q=[1,2,3]; p=[2,3,4];

let w=function(a,b){
let c=a.concat(b);
let d=c.sort((a,b)=>a-b);

let n=d.length/2;
let f=(d[n]+d[n-1])/2
return f;
}
console.log(w(q,p));

OUTPUT:2.5
------------------------------------------------------------------------------------------------------------------------
1.g. Remove all duplicate in an array

A.IIFE 
INPUT  arr=[1,2,3,4,1,2,5,6,4]

(function (ele){

  let uniqueArr = [...new Set(ele)];

    console.log(uniqueArr);
})(arr);

OUTPUT:[ 1, 2, 3, 4, 5, 6 ]

B.ANONYMOUS FUNCTION

INPUT  arr=[1,2,3,4,1,2,5,6,4]

let newarr= function (ele){

  let uniqueArr = [...new Set(ele)];

    console.log(uniqueArr);
};
newarr(arr);
OUTPUT:[ 1, 2, 3, 4, 5, 6 ]
----------------------------------------------------------------------------------------------------------------------------
1.h.Rotate array by k times

A.IIFE

INPUT arr=[1,2,3,4,5];

let w=( function(nums, k) {

  for (let i = 0; i < k; i++) {
      nums.unshift(nums.pop());
  }

  return nums;
})(rotate(arr,2));
console.log(w);

OUTPUT :[4,5,1,2,3]



B.ANONYMOUS FUNCTION

INPUT arr=[1,2,3,4,5];

let rotate = function(nums, k) {

  for (let i = 0; i < k; i++) {
      nums.unshift(nums.pop());
  }

  return nums;
}
console.log(rotate(arr,2));

OUTPUT :[4,5,1,2,3]


-----------------------------------------------------------------------------------------------------------------------------------------
ARROW FUNCTION

3.a.Print the odd number in an array

Input :['1','2','3','4','5','6','7','8','9','10']


const oddnum=(num)=>{
  let newarr=[];
  for(let i=0;i<num.length;i++){
    if(num[i]%2!==0){
      newarr.push(arr[i]);
      }
      }
      console.log(newarr);
}
oddnum(arr);

Output:['1','3','5','7','9']
----------------------------------------------------------------------------------------------------------------------------------------------
3.b.Convert all the strings to title caps in a string array

INPUT:"don’t judge a book by its cover"
 
const title=(string)=>{
      var newstr= string.toLowerCase().split(" ");
      for(var i = 0; i< newstr.length; i++){
         newstr[i] = newstr[i][0].toUpperCase() + newstr[i].slice(1);
      }
        console.log(newstr.join(" "));
   }
   title("don’t judge a book by its cover"); 


OUTPUT:Don’t Judge A Book By Its Cover
-----------------------------------------------------------------------------------------------------------------------------------------------
3.c.sum of all numbers in an array

INPUT:[2,3,4,5]

 let total=(num)=>{
    let sum=0;
  for(let i=0;i<num.length;i++)
 {
  sum=sum+num[i];
  }
 
 console.log(sum);
  }
  
  total(arr);

OUTPUT:14
----------------------------------------------------------------------------------------------------------------------------------------------
3.d.Return all the PRIME number in an array

INPUT:arr=[1,2,3,4,5,6,7];

const prime=(num)=>{
  let newarr=[];
  num.forEach((value)=>{
     let fac=0;  
  for(let i=0;i<=value;i++){   
    if(value%i===0){
      fac++;}      
}
if(fac===2)
  {
  newarr.push(value);
  }
})
return newarr; 
 }
let d=prime(arr);
console.log(d);

OUTPUT:[2,3,5,7]
--------------------------------------------------------------------------------------------------------------------------------------------------
3.e.Return all palindrome in an array

INPUT :arr=["madam","hello","huh","clock","deed"]

const f=(one)=>{
    let newarr=[];
    one.forEach((element)=>{
        
        let a=element.split("");
        let d=a.reverse().join("");
       if(element===d){
       newarr.push(element)
       }
       })
return newarr;
        }
        console.log(f(arr));

OUTPUT:[ 'madam', 'huh', 'deed' ]
-----------------------------------------------------------------------------------------------------------------------------------------------------